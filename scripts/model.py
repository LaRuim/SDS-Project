# -*- coding: utf-8 -*-
"""Model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I0xDRI7qGfsSC7vpnVBO0GuT2cpC_8kF
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
import keras
from keras.models import Sequential
from keras.layers import Activation
from keras.layers.core import Dense
from keras.optimizers import Adam

PATH = "/content/drive/My Drive/Colab Notebooks/Nihal/players_20.csv"
dataset = pd.read_csv(PATH, encoding= 'cp1252')

dataset.isna().sum()
dataset = dataset.dropna()

dataset.columns

dataset = dataset[['attacking_crossing',
       'attacking_finishing', 'attacking_heading_accuracy',
       'attacking_short_passing', 'attacking_volleys', 'overall']]

X = np.array(dataset[['attacking_crossing',
       'attacking_finishing', 'attacking_heading_accuracy',
       'attacking_short_passing', 'attacking_volleys',]])
y = np.array(dataset[['overall']])

X

y

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)

def getModel(inputShape):
    model = Sequential()
    model.add(Dense(32, input_shape = [inputShape,], activation = 'relu'))
    model.add(Dense(32, activation = 'relu'))
    model.add(Dense(32, activation = 'relu'))
    model.add(Dense(1, activation = 'relu'))
    return model

model = getModel(len(X[0]))

model.summary()

model.compile(Adam(),loss = 'mse' )

history = model.fit(X_train,y_train,batch_size = 20,shuffle=True,verbose=1,epochs = 100)

print("Evaluate on test data")
results = model.evaluate(X_test, y_test, batch_size=20)
print("test loss, test acc:", results)

model.predict([[88, 95, 70, 92, 88]])

X_test[-1]

y_test[-1]

